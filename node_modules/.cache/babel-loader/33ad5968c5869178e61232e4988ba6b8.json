{"ast":null,"code":"import _slicedToArray from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/components/PostForm.js\";\nimport React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { UseForm } from '../util/hooks';\nimport gql from 'graphql-tag';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nfunction PostForm() {\n  const _UseForm = UseForm(createPostCallback, {\n    body: ''\n  }),\n        values = _UseForm.values,\n        onChange = _UseForm.onChange,\n        onSubmit = _UseForm.onSubmit;\n\n  const _useMutation = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      proxy.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data: {\n          getPosts: [result.data.createPost, ...data.getPosts]\n        }\n      });\n      values.body = '';\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        createPost = _useMutation2[0],\n        error = _useMutation2[1].error;\n\n  function createPostCallback() {\n    createPost();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Create a post: \"), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"This is first post!\",\n    name: \"body\",\n    onChange: onChange,\n    value: values.body,\n    error: error ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Submit\"))), error && React.createElement(\"div\", {\n    className: \"ui error message\",\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, error.graphQLErrors[0].message))));\n}\n\n;\nconst CREATE_POST_MUTATION = gql`\n    mutation createPost($body: String!){\n        createPost(body: $body){\n            id body createdAt username\n            likes{\n                id username createdAt\n            }\n            likeCount\n            commentCount\n            comments{\n                id body username createdAt\n            }\n        }\n    }\n`;\nexport default PostForm;","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/components/PostForm.js"],"names":["React","Form","Button","useMutation","UseForm","gql","FETCH_POSTS_QUERY","PostForm","createPostCallback","body","values","onChange","onSubmit","CREATE_POST_MUTATION","variables","update","proxy","result","data","readQuery","query","writeQuery","getPosts","createPost","error","marginBottom","graphQLErrors","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;;AAEA,SAASC,QAAT,GAAmB;AAAA,mBACsBH,OAAO,CAACI,kBAAD,EAAsB;AAC9DC,IAAAA,IAAI,EAAE;AADwD,GAAtB,CAD7B;AAAA,QACRC,MADQ,YACRA,MADQ;AAAA,QACAC,QADA,YACAA,QADA;AAAA,QACUC,QADV,YACUA,QADV;;AAAA,uBAKeT,WAAW,CAACU,oBAAD,EAAuB;AAC5DC,IAAAA,SAAS,EAAEJ,MADiD;;AAE5DK,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,YAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAC7BC,QAAAA,KAAK,EAAGd;AADqB,OAAhB,CAAb;AAGAU,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACbD,QAAAA,KAAK,EAAEd,iBADM;AAEbY,QAAAA,IAAI,EAAG;AAACI,UAAAA,QAAQ,EAAG,CAACL,MAAM,CAACC,IAAP,CAAYK,UAAb,EAAyB,GAAGL,IAAI,CAACI,QAAjC;AAAZ;AAFM,OAAjB;AAIAZ,MAAAA,MAAM,CAACD,IAAP,GAAc,EAAd;AACH;;AAX2D,GAAvB,CAL1B;AAAA;AAAA,QAKRc,UALQ;AAAA,QAKKC,KALL,oBAKKA,KALL;;AAmBf,WAAShB,kBAAT,GAA8B;AAC1Be,IAAAA,UAAU;AACb;;AAED,SACA,0CACI,oBAAC,IAAD;AAAO,IAAA,QAAQ,EAAEX,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AACA,IAAA,WAAW,EAAC,qBADZ;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,QAAQ,EAAED,QAHV;AAIA,IAAA,KAAK,EAAED,MAAM,CAACD,IAJd;AAKA,IAAA,KAAK,EAAEe,KAAK,GAAG,IAAH,GAAU,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CAFJ,CADJ,EAgBKA,KAAK,IAAK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAC;AAAd,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACP;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBC,OAA5B,CADJ,CADO,CAhBf,CADA;AAwBH;;AAAA;AAED,MAAMd,oBAAoB,GAAGR,GAAI;;;;;;;;;;;;;;CAAjC;AAgBA,eAAeE,QAAf","sourcesContent":["import React from 'react'\nimport {Form, Button} from 'semantic-ui-react'\nimport {useMutation} from '@apollo/react-hooks'\nimport {UseForm} from '../util/hooks'\nimport gql from 'graphql-tag'\nimport {FETCH_POSTS_QUERY} from '../util/graphql'\n\nfunction PostForm(){\n    const {values, onChange, onSubmit} = UseForm(createPostCallback , {\n        body: ''\n    });\n\n    const [createPost, {error}] = useMutation(CREATE_POST_MUTATION, {\n        variables: values, \n        update(proxy, result) {\n            const data = proxy.readQuery({\n            query : FETCH_POSTS_QUERY\n        })\n            proxy.writeQuery({\n                query: FETCH_POSTS_QUERY, \n                data : {getPosts : [result.data.createPost, ...data.getPosts ]}\n        });\n            values.body = '';\n        }\n    });\n\n    function createPostCallback (){\n        createPost()\n    }\n\n    return(\n    <>\n        <Form  onSubmit={onSubmit}>\n            <h2>Create a post: </h2>\n            <Form.Field>\n                <Form.Input\n                placeholder='This is first post!'\n                name='body'\n                onChange={onChange}\n                value={values.body}\n                error={error ? true : false}\n                />\n                <Button type='submit' color='teal'>\n                    Submit\n                </Button>\n            </Form.Field>\n        </Form>\n        {error && (<div className='ui error message' style={{marginBottom:10}} >\n            <ul className='list ' > \n                <li>{error.graphQLErrors[0].message}</li>\n            </ul>\n        </div>)}\n    </>\n    )\n};\n\nconst CREATE_POST_MUTATION = gql`\n    mutation createPost($body: String!){\n        createPost(body: $body){\n            id body createdAt username\n            likes{\n                id username createdAt\n            }\n            likeCount\n            commentCount\n            comments{\n                id body username createdAt\n            }\n        }\n    }\n`\n\nexport default PostForm"]},"metadata":{},"sourceType":"module"}