{"ast":null,"code":"import _slicedToArray from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/context/auth.js\";\nimport React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread({}, state, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      login,\n      logout\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","initialState","user","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch","setItem","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;;AAGA,IAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAH,EAAoC;AAChC,QAAMC,YAAY,GAAGL,SAAS,CAACG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAA9B;;AACA,MAAGC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA7B,EAAyC;AACrCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACH,GAFD,MAEO;AACHR,IAAAA,YAAY,CAACC,IAAb,GAAoBG,YAApB;AACH;AACJ;;AAGD,MAAMK,WAAW,GAAGX,aAAa,CAAC;AAC9BG,EAAAA,IAAI,EAAE,IADwB;AAE9BS,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAFO;AAG9BC,EAAAA,MAAM,EAAG,MAAI,CAAE;AAHe,CAAD,CAAjC;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACI,+BACOF,KADP;AAEIb,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAFjB;;AAIJ,SAAK,QAAL;AACI,+BACOH,KADP;AAEIb,QAAAA,IAAI,EAAE;AAFV;;AAIJ;AACI,aAAOa,KAAP;AAZR;AAcH;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,sBACAtB,UAAU,CAACgB,WAAD,EAAcb,YAAd,CADV;AAAA;AAAA,QAClBc,KADkB;AAAA,QACZM,QADY;;AAEzB,WAASV,KAAT,CAAeC,QAAf,EAAyB;AACrBT,IAAAA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiCV,QAAQ,CAACW,KAA1C;AACAF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,MAAT,GAAkB;AACdV,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAY,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH;;AAED,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACf,MAAAA,IAAI,EAAEa,KAAK,CAACb,IAAb;AAAmBS,MAAAA,KAAnB;AAA0BE,MAAAA;AAA1B;AADX,KAEQO,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH;;AAED,SAAQV,WAAR,EAAqBS,YAArB","sourcesContent":["import React , {useReducer, createContext} from 'react'\nimport jwtDecode from 'jwt-decode'\n\nconst initialState = {\n    user: null\n}\nif(localStorage.getItem('jwtToken')){\n    const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n    if(decodedToken.exp * 1000 < Date.now()) {\n        localStorage.removeItem('jwtToken')\n    } else {\n        initialState.user = decodedToken;\n    }\n}\n\n\nconst AuthContext = createContext({\n    user: null,\n    login: (userData) => {},\n    logout : ()=>{}\n})\n\nfunction authReducer(state,action) {\n    switch(action.type){\n        case 'LOGIN' :\n            return{\n                ...state,\n                user: action.payload\n            }\n        case 'LOGOUT' : \n            return{\n                ...state,\n                user: null\n            }\n        default:\n            return state;\n    }\n}\n\nfunction AuthProvider(props) {\n    const [state,dispatch] = useReducer(authReducer, initialState);\n    function login(userData) {\n        localStorage.setItem(\"jwtToken\", userData.token);\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        })\n    }\n\n    function logout() {\n        localStorage.removeItem(\"jwtToken\");\n        dispatch({type: 'LOGOUT'});\n    }\n\n    return(\n        <AuthContext.Provider\n            value={{user: state.user, login, logout}}\n            {...props}\n            />\n    )\n\n\n}\n\nexport {AuthContext, AuthProvider}"]},"metadata":{},"sourceType":"module"}