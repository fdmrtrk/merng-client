{"ast":null,"code":"import _slicedToArray from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/pages/register.js\";\nimport React, { useContext, useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/auth';\nimport { UseForm } from '../util/hooks';\n\nfunction Register(props) {\n  const context = useContext(AuthContext);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _UseForm = UseForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        onChange = _UseForm.onChange,\n        onSubmit = _UseForm.onSubmit,\n        values = _UseForm.values;\n\n  const _useMutation = useMutation(REGISTER_USER, {\n    update(_, {\n      data: {\n        register: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      console.log(err.graphQLErrors[0].extensions.exception.errors);\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addUser = _useMutation2[0],\n        loading = _useMutation2[1].loading;\n\n  function registerUser() {\n    addUser();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-ui register-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? \"loading\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Form.Input, {\n    label: \"username\",\n    placeholder: \"Username..\",\n    name: \"username\",\n    value: values.username,\n    error: errors.username ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"Email\",\n    placeholder: \"Email..\",\n    name: \"email\",\n    value: values.email,\n    error: errors.email ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password..\",\n    name: \"password\",\n    error: errors.password ? true : false,\n    value: values.password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    type: \"password\",\n    label: \"Confirm Password\",\n    placeholder: \"Conform Password..\",\n    name: \"confirmPassword\",\n    error: errors.confirmPassword ? true : false,\n    value: values.confirmPassword,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Register\")), Object.keys(errors).length > 0 && React.createElement(\"div\", {\n    className: \"ui error message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Object.values(errors).map(value => React.createElement(\"li\", {\n    key: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, value)))));\n} //firs define data type \n//second define register input and asign the variables which you defined at first step\n//third return callback\n\n\nconst REGISTER_USER = gql`\n    mutation register(\n        $username : String!\n        $email : String!\n        $password : String!\n        $confirmPassword : String!\n    ){\n        register(\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword : $confirmPassword\n            }\n        ){\n            id email username createdAt token \n        }\n    }\n`;\nexport default Register;","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/pages/register.js"],"names":["React","useContext","useState","Form","Button","gql","useMutation","AuthContext","UseForm","Register","props","context","errors","setErrors","registerUser","username","email","password","confirmPassword","onChange","onSubmit","values","REGISTER_USER","update","_","data","register","userData","login","history","push","onError","err","console","log","graphQLErrors","extensions","exception","variables","addUser","loading","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\nimport {Form, Button} from 'semantic-ui-react'\nimport gql from 'graphql-tag'\nimport {useMutation} from '@apollo/react-hooks'\nimport {AuthContext} from '../context/auth'\nimport {UseForm} from '../util/hooks'\n\n\nfunction Register(props) {\n    const context = useContext(AuthContext)\n    const [errors, setErrors] = useState({})\n\n    const {onChange, onSubmit, values} = UseForm(registerUser, {\n        username: '',\n        email : '',\n        password: '',\n        confirmPassword : ''\n    } )\n\n    const[addUser , {loading}] = useMutation(REGISTER_USER, { \n\n        update(_,{data:{ register: userData}}){\n            context.login(userData)\n            props.history.push('/')\n        \n        },\n        onError(err){\n            console.log(err.graphQLErrors[0].extensions.exception.errors);\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\n        \n            \n        }, \n        variables: values\n    })\n   \n\n    function registerUser() {\n        addUser()\n    }\n\n\n\n\n    return (\n    <div className='form-ui register-container'>\n        <Form  onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"} >\n            <h1>Register</h1>\n            <Form.Input label='username' placeholder='Username..' name='username' value={values.username} error={errors.username ? true : false} onChange={onChange}/>\n            <Form.Input label='Email' placeholder='Email..' name='email' value={values.email} error={errors.email ? true : false} onChange={onChange}/>\n            <Form.Input type='password' label='Password' placeholder='Password..' name='password' error={errors.password ? true : false} value={values.password} onChange={onChange}/>\n            <Form.Input type='password' label='Confirm Password' placeholder='Conform Password..' name='confirmPassword' error={errors.confirmPassword ? true : false} value={values.confirmPassword} onChange={onChange}/>\n            <Button type='submit' primary >\n                Register\n            </Button>\n        </Form>\n       {Object.keys(errors).length > 0 && (\n            <div className='ui error message'>\n            <ul className='list'>\n                {Object.values(errors).map(value=>(\n                <li key={value}>{value}</li>\n                ))}\n            </ul>\n        </div>\n       )}\n    </div>\n    )\n}\n\n//firs define data type \n//second define register input and asign the variables which you defined at first step\n//third return callback\nconst REGISTER_USER = gql`\n    mutation register(\n        $username : String!\n        $email : String!\n        $password : String!\n        $confirmPassword : String!\n    ){\n        register(\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword : $confirmPassword\n            }\n        ){\n            id email username createdAt token \n        }\n    }\n`\n\nexport default Register; "]},"metadata":{},"sourceType":"module"}