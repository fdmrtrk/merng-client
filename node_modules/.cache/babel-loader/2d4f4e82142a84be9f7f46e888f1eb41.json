{"ast":null,"code":"import _slicedToArray from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/components/LikeButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon, Popup } from 'semantic-ui-react';\n\nfunction LikeButton({\n  user,\n  post: {\n    id,\n    likeCount,\n    likes\n  }\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  useEffect(() => {\n    if (user && likes.find(like => like.username === user.username)) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  }, [user, likes]);\n\n  const _useMutation = useMutation(LIKE_POST_MUTATION, {\n    variables: {\n      postId: id\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        likePost = _useMutation2[0];\n\n  const likeButton = user ? liked ? React.createElement(Button, {\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    color: \"teal\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    as: Link,\n    to: \"/login\",\n    color: \"teal\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n  return React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    onClick: likePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    inverted: true,\n    content: liked ? 'Unlike the post' : 'Like the Post',\n    trigger: likeButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Label, {\n    as: \"a\",\n    basic: true,\n    color: \"teal\",\n    pointing: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, likeCount));\n}\n\nconst LIKE_POST_MUTATION = gql`\n    mutation likePost($postId : ID!){\n        likePost(postId: $postId){\n            id\n            likes{\n                id username\n            }\n            likeCount\n        }\n    }\n`;\nexport default LikeButton;","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/components/LikeButton.js"],"names":["React","useState","useEffect","Link","useMutation","gql","Button","Label","Icon","Popup","LikeButton","user","post","id","likeCount","likes","liked","setLiked","find","like","username","LIKE_POST_MUTATION","variables","postId","likePost","likeButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAwC,mBAAxC;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAI,EAAE;AAACC,IAAAA,EAAD;AAAKC,IAAAA,SAAL;AAAgBC,IAAAA;AAAhB;AAAb,CAApB,EAA0D;AAAA,oBAC5Bd,QAAQ,CAAC,KAAD,CADoB;AAAA;AAAA,QAC/Ce,KAD+C;AAAA,QACxCC,QADwC;;AAEtDf,EAAAA,SAAS,CAAE,MAAK;AACZ,QAAGS,IAAI,IAAII,KAAK,CAACG,IAAN,CAAWC,IAAI,IAAGA,IAAI,CAACC,QAAL,KAAkBT,IAAI,CAACS,QAAzC,CAAX,EAA8D;AAC1DH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEM;AACFA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GANQ,EAMP,CAACN,IAAD,EAAMI,KAAN,CANO,CAAT;;AAFsD,uBAUnCX,WAAW,CAAEiB,kBAAF,EAAqB;AAC/CC,IAAAA,SAAS,EAAG;AAACC,MAAAA,MAAM,EAAGV;AAAV;AADmC,GAArB,CAVwB;AAAA;AAAA,QAU/CW,QAV+C;;AActD,QAAMC,UAAU,GAAGd,IAAI,GACnBK,KAAK,GACD,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADC,GAKD,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,KAAK,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANe,GAWnB,oBAAC,MAAD;AAAS,IAAA,EAAE,EAAEb,IAAb;AAAmB,IAAA,EAAE,EAAC,QAAtB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAA4C,IAAA,KAAK,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAXJ;AAgBA,SACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,aAAa,EAAC,OAA/B;AAAuC,IAAA,OAAO,EAAEqB,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,OAAO,EAAER,KAAK,GAAG,iBAAH,GAAuB,eAArD;AAAsE,IAAA,OAAO,EAAES,UAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIA,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAiC,IAAA,QAAQ,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SADH,CAJA,CADJ;AAWH;;AAED,MAAMO,kBAAkB,GAAGhB,GAAI;;;;;;;;;;CAA/B;AAaA,eAAeK,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useMutation} from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport {Button, Label,Icon, Popup} from 'semantic-ui-react'\n\nfunction LikeButton({user, post: {id, likeCount, likes}}) {\n    const [liked, setLiked] = useState(false);\n    useEffect( ()=> {\n        if(user && likes.find(like=> like.username === user.username)){\n            setLiked(true)\n        }else {\n            setLiked(false)\n        }\n    },[user,likes])\n\n    const [likePost] = useMutation (LIKE_POST_MUTATION,{\n        variables : {postId : id}\n    });\n\n    const likeButton = user ? (\n        liked ? (\n            <Button color='teal' >\n             <Icon name='heart' />\n            </Button>\n        ) : (\n            <Button color='teal' basic>\n            <Icon name='heart' />\n            </Button>\n        )\n    ) : (\n        <Button  as={Link} to='/login' color='teal' basic>\n        <Icon name='heart' />\n        </Button>\n    )\n\n    return(\n        <Button as='div' labelPosition='right' onClick={likePost}>\n            <Popup inverted content={liked ? 'Unlike the post' : 'Like the Post'} trigger={likeButton}\n            \n            />\n        <Label as='a' basic color='teal' pointing='left'>\n          {likeCount}\n        </Label>\n      </Button>\n    )\n   \n}\n\nconst LIKE_POST_MUTATION = gql`\n    mutation likePost($postId : ID!){\n        likePost(postId: $postId){\n            id\n            likes{\n                id username\n            }\n            likeCount\n        }\n    }\n`\n\n\nexport default LikeButton"]},"metadata":{},"sourceType":"module"}