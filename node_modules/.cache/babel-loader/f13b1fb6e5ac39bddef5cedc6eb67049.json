{"ast":null,"code":"var _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/ApolloProvider.js\";\nimport React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from 'apollo-link-context';\nconst httplink = createHttpLink({\n  uri: \"https://floating-plateau-30192.herokuapp.com/\"\n});\nconst authLink = setContext(() => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httplink),\n  cache: new InMemoryCache()\n});\nexport default React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/ApolloProvider.js"],"names":["React","App","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","setContext","httplink","uri","authLink","token","localStorage","getItem","headers","Authorization","client","link","concat","cache"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA6B,uBAA7B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC5BI,EAAAA,GAAG,EAAE;AADuB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGH,UAAU,CAAE,MAAK;AAC/B,QAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACD,SAAO;AACHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAGJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADvC;AADN,GAAP;AAKF,CAP2B,CAA3B;AASA,MAAMK,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC5Bc,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADsB;AAE5BW,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFqB,CAAjB,CAAf;AAMA,eACI,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAGY,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ","sourcesContent":[" import React from \"react\" \n import App from \"./App\"\n import ApolloClient from \"apollo-client\"\n import { InMemoryCache} from \"apollo-cache-inmemory\"\n import {createHttpLink} from \"apollo-link-http\"\n import {ApolloProvider} from \"@apollo/react-hooks\"\n import {setContext} from 'apollo-link-context'\n\n const httplink = createHttpLink({\n     uri: \"https://floating-plateau-30192.herokuapp.com/\"\n })\n\n const authLink = setContext( ()=> {\n    const token = localStorage.getItem('jwtToken');\n   return {\n       headers: {\n           Authorization : token ? `Bearer ${token}` : ''\n       }\n   }\n})\n\n const client = new ApolloClient({\n     link: authLink.concat(httplink),\n     cache: new InMemoryCache()\n })\n\n\n export default (\n     <ApolloProvider client= {client}>\n         <App/>\n     </ApolloProvider>\n );\n\n"]},"metadata":{},"sourceType":"module"}