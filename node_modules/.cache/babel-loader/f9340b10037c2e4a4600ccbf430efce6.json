{"ast":null,"code":"import _slicedToArray from \"/Users/furkandemirturk/Desktop/merng-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/furkandemirturk/Desktop/merng-client/src/pages/SinglePost.js\";\nimport React, { useContext, useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Grid, Button, Card, Image, Form, Icon, Label } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { AuthContext } from '../context/auth';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\n\nfunction SinglePost(props) {\n  let postMarkup;\n  const postId = props.match.params.postId;\n\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        comment = _useState2[0],\n        setComment = _useState2[1];\n\n  console.log(postId);\n\n  const _useQuery = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useMutation = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment('');\n    },\n\n    variables: {\n      postId,\n      body: comment\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        submitComment = _useMutation2[0];\n\n  console.log(loading);\n  console.log(error);\n\n  function deleteButtonCallback() {\n    props.history.push('/');\n  }\n\n  console.log('my data');\n  console.log(data);\n\n  if (data.getPost) {\n    console.log('data after the if clouse');\n    console.log(data);\n    const _data$getPost = data.getPost,\n          id = _data$getPost.id,\n          body = _data$getPost.body,\n          createdAt = _data$getPost.createdAt,\n          username = _data$getPost.username,\n          comments = _data$getPost.comments,\n          likes = _data$getPost.likes,\n          likeCount = _data$getPost.likeCount,\n          commentCount = _data$getPost.commentCount;\n    console.log('single post is here: ');\n    console.log(body);\n    postMarkup = React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-container\",\n      style: {\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n      size: \"small\",\n      float: \"right\",\n      style: {\n        borderRadius: 81,\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, username), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, moment(createdAt).fromNow()), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, body), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(LikeButton, {\n      user: user,\n      post: {\n        id,\n        likeCount,\n        likes\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: \"div\",\n      labelPosition: \"right\",\n      onClick: () => {\n        console.log('commented');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Label, {\n      basic: true,\n      color: \"blue\",\n      pointing: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, commentCount)), user && user.username === username && React.createElement(DeleteButton, {\n      postId: id,\n      callback: deleteButtonCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))), user && React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Post a comment\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui action input fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"comment-ui\",\n      placeholder: \"Comment..\",\n      value: comment,\n      name: \"comment\",\n      onChange: event => setComment(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"comment-submit\",\n      disabled: comment.trim() === '',\n      onClick: submitComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Submit\"))))), comments.map(comment => React.createElement(Card, {\n      fluid: true,\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, user && user.username === comment.username && React.createElement(DeleteButton, {\n      postId: id,\n      commentId: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \", comment.username), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, moment(comment.createdAt).fromNow()), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, comment.body))))))));\n    return postMarkup;\n  } else {\n    postMarkup = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Post Loading \");\n    return postMarkup;\n  }\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n    mutation($postId: String!, $body: String!) {\n        createComment(postId : $postId, body:$body){\n            id\n            comments{\n                id body createdAt username\n            }\n            commentCount\n        }\n    }\n`;\nconst FETCH_POST_QUERY = gql`\n    query($postId: ID!){\n        getPost(postId: $postId){\n            id \n            body \n            createdAt \n            username \n            likeCount\n            likes{\n                username\n            }\n            commentCount\n            comments{\n                id \n                username \n                createdAt \n                body\n            }\n        }\n    }\n`;\nexport default SinglePost;","map":{"version":3,"sources":["/Users/furkandemirturk/Desktop/merng-client/src/pages/SinglePost.js"],"names":["React","useContext","useState","gql","useQuery","useMutation","Grid","Button","Card","Image","Form","Icon","Label","moment","AuthContext","LikeButton","DeleteButton","SinglePost","props","postMarkup","postId","match","params","user","comment","setComment","console","log","FETCH_POST_QUERY","variables","loading","error","data","SUBMIT_COMMENT_MUTATION","update","body","submitComment","deleteButtonCallback","history","push","getPost","id","createdAt","username","comments","likes","likeCount","commentCount","margin","borderRadius","fromNow","event","target","value","trim","map"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\nimport gql from 'graphql-tag'\nimport {useQuery, useMutation} from '@apollo/react-hooks'\nimport { Grid , Button, Card, Image, Form, Icon, Label} from 'semantic-ui-react';\nimport moment from 'moment'\nimport {AuthContext} from '../context/auth'\nimport LikeButton from '../components/LikeButton'\nimport DeleteButton from '../components/DeleteButton'\n\n\n\nfunction SinglePost (props) {\n    let postMarkup;\n    const postId = props.match.params.postId;\n    const {user} = useContext(AuthContext)\n    const [comment, setComment] = useState('')\n    console.log(postId);\n    \n    const {loading,error,data} = useQuery(FETCH_POST_QUERY, {variables : {postId}})\n    const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n        update(){\n            setComment('')\n        },\n        variables : {\n            postId,\n            body : comment\n        }\n    })\n    console.log(loading)\n    console.log(error)\n    function deleteButtonCallback() {\n        props.history.push('/')\n    }\n    console.log('my data')\n    console.log(data)\n    if(data.getPost){\n        console.log('data after the if clouse')\n        console.log(data)\n        const {\n            id,\n            body,\n            createdAt,\n            username,\n            comments,\n            likes,\n            likeCount,\n            commentCount\n          } = data.getPost\n          console.log('single post is here: ' )\n          console.log(body)\n          postMarkup = (\n            <Grid>\n                <div className=\"user-container\" style={{margin:'auto'}}>\n                <Grid.Row >\n                    <Grid.Column width={2}>\n                         <Image \n                             src='https://react.semantic-ui.com/images/avatar/large/molly.png' \n                             size='small'\n                             float='right'\n                             style={{ borderRadius: 81, margin: 'auto'}}\n                         />\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                         <Card fluid >\n                             <Card.Content>\n                                 <Card.Header>{username}</Card.Header>\n                                 <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                                 <Card.Description>{body}</Card.Description>\n                                 <Card.Content extra >\n                                     <LikeButton user={user} post={{id, likeCount, likes}}  />\n                                     <Button as='div' labelPosition='right' onClick={ ()=> {console.log('commented')}}>\n                                         <Button basic color='blue'>\n                                             <Icon name='comments'/>\n                                         </Button>\n                                         <Label basic color='blue' pointing='left'>\n                                             {commentCount} \n                                         </Label>\n                                     </Button>\n                                     {user&&user.username === username && (<DeleteButton postId={id} callback={deleteButtonCallback} />)}\n                                 </Card.Content>\n                             </Card.Content>\n                         </Card>\n                         {user && (\n                             <Card fluid >\n                                <Card.Content>\n                                    <p> Post a comment</p>\n                                    <Form>\n                                        <div className='ui action input fluid'>\n                                            <input type='text' className=\"comment-ui\"placeholder='Comment..' value={comment} name='comment' onChange={ event=> setComment(event.target.value)} />\n                                            <button type='submit' className=\"comment-submit\" disabled= {comment.trim() === ''} onClick={submitComment} >\n                                                Submit\n                                            </button>\n                                        </div>\n                                    </Form>\n                                </Card.Content>\n                             </Card>\n                         )}\n                         {comments.map( comment => (\n                             <Card fluid key={comment.id} >\n                                 <Card.Content>\n                                     {user&& user.username === comment.username && (\n                                         <DeleteButton postId={id} commentId={comment.id} />\n                                     )}\n                                    <Card.Header> {comment.username}</Card.Header>\n                                    <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\n                                    <Card.Description>{comment.body}</Card.Description>\n                                 </Card.Content>\n                             </Card>\n                         ))}\n                    </Grid.Column>\n                    \n                </Grid.Row>\n                </div>\n            </Grid>\n        )\n        return postMarkup\n\n    } else {\n        postMarkup = <p>Post Loading </p>\n        return postMarkup\n    }\n    \n    \n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n    mutation($postId: String!, $body: String!) {\n        createComment(postId : $postId, body:$body){\n            id\n            comments{\n                id body createdAt username\n            }\n            commentCount\n        }\n    }\n`\n\nconst FETCH_POST_QUERY = gql`\n    query($postId: ID!){\n        getPost(postId: $postId){\n            id \n            body \n            createdAt \n            username \n            likeCount\n            likes{\n                username\n            }\n            commentCount\n            comments{\n                id \n                username \n                createdAt \n                body\n            }\n        }\n    }\n`\n\nexport default SinglePost"]},"metadata":{},"sourceType":"module"}